<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!-- 親POM -->
  <parent>
    <groupId>com.nablarch.archetype</groupId>
    <artifactId>nablarch-archetype-parent</artifactId>
    <version>5u9</version>
  </parent>

  <groupId>com.nablarch.example</groupId>
  <artifactId>nablarch-example-batch-ee</artifactId>
  <version>5u9</version>

  <!-- DB接続設定とビルド設定 -->
  <properties>
    <!-- 使用するDBによって変更になるパラメータ -->
    <dba.useDB>h2</dba.useDB>
    <dba.classifier>${dba.useDB}</dba.classifier>
    <dba.erdFile>src/main/resources/entity/h2.edm</dba.erdFile>
    <dba.extraDdlDirectory>src/main/resources/extraDdl/${dba.useDB}</dba.extraDdlDirectory>
    <dba.dataDirectory>src/test/resources/data/${dba.useDB}</dba.dataDirectory>

    <!-- gsp-dba-maven-pluginが使用するデータベース設定 -->
    <nablarch.db.jdbcDriver>org.h2.Driver</nablarch.db.jdbcDriver>
    <nablarch.db.url>jdbc:h2:./h2/db/nablarch_example</nablarch.db.url>
    <nablarch.db.adminUser>sa</nablarch.db.adminUser>
    <nablarch.db.adminPassword></nablarch.db.adminPassword>
    <nablarch.db.user>NABLARCH_EXAMPLE</nablarch.db.user>
    <nablarch.db.password>NABLARCH_EXAMPLE</nablarch.db.password>
    <nablarch.db.schema></nablarch.db.schema>

    <!-- maven-gsp-dba-pluginで配布するテストデータのartifactId。 -->
    <db.testDataArtifactId>nablarch-example-batch-ee-testdata</db.testDataArtifactId>

    <!-- maven-gsp-dba-pluginでEntityクラスを生成するパッケージ名。 -->
    <dba.entity.rootPackage>com.nablarch.example.app</dba.entity.rootPackage>
    <dba.entity.entityPackage>entity</dba.entity.entityPackage>

    <!-- 利用するJavaのバージョン -->
    <java.version>1.8</java.version>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <scheme>バッチ</scheme>
    <!-- 環境ごとのリソースディレクトリ(プロファイルにより切り替わる) -->
    <env.resources>${project.basedir}/src/env/${envDir}/resources</env.resources>
    <db.product>oracle</db.product>
    <db.type>oracle</db.type>
  </properties>

  <build>
    <!-- 成果物の名称 -->
    <finalName>${finalName}</finalName>
    <resources>
      <resource>
        <directory>${env.resources}</directory>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
      <resource>
        <directory>src/main/java</directory>
        <includes>
          <include>**/*.sql</include>
        </includes>
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </resource>
      <resource>
        <directory>src/${db.product}/resources</directory>
      </resource>
    </resources>
    
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <classpathPrefix>lib/</classpathPrefix>
              <mainClass>nablarch.fw.batch.ee.Main</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <descriptors>
            <descriptor>distribution.xml</descriptor>
          </descriptors>
          <finalName>application-${project.version}</finalName>
          <appendAssemblyId>false</appendAssemblyId>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
      <!-- エンティティクラス生成等を行うための設定 -->
      <plugin>
        <groupId>jp.co.tis.gsp</groupId>
        <artifactId>gsp-dba-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>com.nablarch.etl</groupId>
        <artifactId>nablarch-etl-maven-plugin</artifactId>
        <version>1.0.0</version>
        <configuration>
          <classes>
            <param>com.nablarch.example.app.batch.ee.dto.ZipCodeDto</param>
          </classes>
          <outputPath>testdata/sqlloader/control</outputPath>
        </configuration>
        <executions>
          <execution>
            <id>generate-ctrl-file</id>
            <phase>compile</phase>
            <goals>
              <goal>generate-ctrl-file</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.nablarch.etl</groupId>
        <artifactId>nablarch-etl-maven-plugin</artifactId>
      </plugin>
      <!-- gsp-dba-maven-pluginで自動生成したソースをビルド時に使用するための設定 -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
      </plugin>
      <!-- レポーティング用のプラグインを追加 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <!-- MANIFEST.MFでClass-Pathを指定すると、依存jar内で定義されているtaglibのuriを正しく解決してくれない。 -->
          <useManifestOnlyJar>false</useManifestOnlyJar>
        </configuration>
      </plugin>
      <!-- カバレッジ取得 -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <!-- 0.7.3以降のJaCoCoではリクエスト単体テストのカバレッジを計測できない。
          Jenkinsとの連携にはJaCoCoプラグインの1系を使用する(2系はJaCoCo0.7.4以降が必須) -->
        <configuration>
          <excludes>
            <exclude>**/com/nablarch/example/app/entity/*</exclude>
          </excludes>
        </configuration>
      </plugin>
    </plugins>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.2</version>
          <configuration>
            <source>${java.version}</source>
            <target>${java.version}</target>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <configuration>
            <archive>
              <manifestEntries>
                <Target-Environment>${envName}</Target-Environment>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <!--
    このプロファイルは環境を指定するものであり、相互に排他的である。
    複数のプロファイルを同時に指定してはならない。
  -->
  <profiles>

    <!-- gsp-dba-plugin -->
    <profile>
      <id>gsp</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <directory>${dba.gsp-target-dir}</directory>
        <plugins>
          <plugin>
            <groupId>jp.co.tis.gsp</groupId>
            <artifactId>gsp-dba-maven-plugin</artifactId>
            <dependencies>
              <!-- プロジェクトで使用するDB製品にあわせたJDBCドライバに上書きする -->
              <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>1.4.192</version>
                <scope>runtime</scope>
              </dependency>
            </dependencies>
            <executions>
              <execution>
                <id>default-cli</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>generate-ddl</goal>
                  <goal>execute-ddl</goal>
                  <goal>generate-entity</goal>
                  <goal>load-data</goal>
                  <goal>export-schema</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-install-plugin</artifactId>
            <version>${version.plugins.install}</version>
            <executions>
              <!-- gsp-dba-maven-pluginで生成したdumpファイルをinstallするための設定 -->
              <execution>
                <id>default-cli</id>
                <goals>
                  <goal>install-file</goal>
                </goals>
                <configuration>
                  <file>${dba.gsp-target-dir}/output/${dba.testDataArtifactId}-${dba.dump.version}.jar</file>
                  <groupId>${project.groupId}</groupId>
                  <version>${dba.dump.version}</version>
                  <artifactId>${dba.testDataArtifactId}</artifactId>
                  <packaging>jar</packaging>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-deploy-plugin</artifactId>
            <version>${version.plugins.deploy}</version>
            <executions>
              <!-- gsp-dba-maven-pluginで生成したdumpファイルをdeployするための設定 -->
              <execution>
                <id>default-cli</id>
                <goals>
                  <goal>deploy-file</goal>
                </goals>
                <configuration>
                  <file>${dba.gsp-target-dir}/output/${dba.testDataArtifactId}-${dba.dump.version}.jar</file>
                  <groupId>${project.groupId}</groupId>
                  <version>${dba.dump.version}</version>
                  <artifactId>${dba.testDataArtifactId}</artifactId>
                  <repositoryId>${project.distributionManagement.repository.id}</repositoryId>
                  <url>${project.distributionManagement.repository.url}</url>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- 開発環境 -->
    <profile>
      <id>development</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <!-- 環境設定ファイル自動生成ツールで指定している環境名 -->
        <envName>開発環境</envName>
        <!-- Mavenの環境別リソースのディレクトリ名 -->
        <envDir>dev</envDir>
        <finalName>${project.artifactId}-${project.version}</finalName>
        <db.product>dev</db.product>
      </properties>
    </profile>

    <!-- 本番環境 -->
    <profile>
      <id>production</id>
      <properties>
        <envName>本番環境</envName>
        <envDir>production</envDir>
      </properties>
    </profile>
  </profiles>

  <dependencies>

    <dependency>
      <groupId>com.nablarch.configuration</groupId>
      <artifactId>nablarch-main-default-configuration</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>com.nablarch.framework</groupId>
      <artifactId>nablarch-core-transaction</artifactId>
    </dependency>

    <dependency>
      <groupId>com.nablarch.framework</groupId>
      <artifactId>nablarch-core-validation-ee</artifactId>
    </dependency>

    <dependency>
      <groupId>com.nablarch.framework</groupId>
      <artifactId>nablarch-fw-batch-ee</artifactId>
    </dependency>

    <dependency>
      <groupId>com.nablarch.framework</groupId>
      <artifactId>nablarch-fw-batch</artifactId>
    </dependency>

    <dependency>
      <groupId>com.nablarch.framework</groupId>
      <artifactId>nablarch-common-dao</artifactId>
    </dependency>

    <dependency>
      <groupId>com.nablarch.framework</groupId>
      <artifactId>nablarch-common-databind</artifactId>
    </dependency>

    <dependency>
      <groupId>com.nablarch.framework</groupId>
      <artifactId>nablarch-common-jdbc</artifactId>
    </dependency>

    <dependency>
      <groupId>com.nablarch.framework</groupId>
      <artifactId>nablarch-etl</artifactId>
    </dependency>

    <dependency>
      <groupId>com.nablarch.framework</groupId>
      <artifactId>nablarch-common-idgenerator-jdbc</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jboss.spec.javax.batch</groupId>
      <artifactId>jboss-batch-api_1.0_spec</artifactId>
      <version>1.0.0.Final</version>
    </dependency>

    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <version>1</version>
    </dependency>

    <dependency>
      <groupId>javax.enterprise</groupId>
      <artifactId>cdi-api</artifactId>
      <version>1.2</version>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
      <version>5.1.3.Final</version>
    </dependency>

    <dependency>
      <groupId>org.jboss.spec.javax.transaction</groupId>
      <artifactId>jboss-transaction-api_1.2_spec</artifactId>
      <version>1.0.0.Final</version>
    </dependency>

    <dependency>
      <groupId>org.jberet</groupId>
      <artifactId>jberet-core</artifactId>
      <version>1.2.2.Final</version>
    </dependency>

    <dependency>
      <groupId>org.jboss.marshalling</groupId>
      <artifactId>jboss-marshalling</artifactId>
      <version>1.4.10.Final</version>
    </dependency>

    <dependency>
      <groupId>org.jboss.weld</groupId>
      <artifactId>weld-core</artifactId>
      <version>2.2.12.Final</version>
    </dependency>

    <dependency>
      <groupId>org.wildfly.security</groupId>
      <artifactId>wildfly-security-manager</artifactId>
      <version>1.1.2.Final</version>
    </dependency>

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>18.0</version>
    </dependency>

    <dependency>
      <groupId>org.jberet</groupId>
      <artifactId>jberet-se</artifactId>
      <version>1.2.0.Final</version>
    </dependency>

    <dependency>
      <groupId>org.jboss.weld.se</groupId>
      <artifactId>weld-se</artifactId>
      <version>2.2.12.Final</version>
    </dependency>

    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>1.4.191</version>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.12</version>
    </dependency>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.1.3</version>
    </dependency>

    <dependency>
      <groupId>commons-dbcp</groupId>
      <artifactId>commons-dbcp</artifactId>
      <version>1.4</version>
    </dependency>

    <dependency>
      <groupId>org.glassfish</groupId>
      <artifactId>javax.el</artifactId>
      <version>3.0.0</version>
    </dependency>

    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-core</artifactId>
      <version>1.3</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.10</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.nablarch.framework</groupId>
      <artifactId>nablarch-testing</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.nablarch.configuration</groupId>
      <artifactId>nablarch-testing-default-configuration</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.nablarch.integration</groupId>
      <artifactId>nablarch-jboss-logging-adaptor</artifactId>
      <version>1.0.0</version>
    </dependency>
  </dependencies>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.nablarch.profile</groupId>
        <artifactId>nablarch-bom</artifactId>
        <version>5u9</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

</project>
